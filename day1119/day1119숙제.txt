4. 부속질의에 관한 다음 SQL문을 수행해보고 어떤 질의에 대한 답인지 설명하시오
(1) select custid,
	(select address from customer cs where cs.custid=od.custid) "address",
	sum(saleprice) "total"
	from orders od
	group by od.custid;
	
=> 고객번호별 주소와 총구매가격

(2) select cs.name,s
	from (select custid,avg(saleprice) s from orders group by custid) od, customer cs
	where cs.custid=od.custid;

=> 고객이름별 평균구매가격

(3) select sum(saleprice) "total"
	from orders od
	where exists (select * from customer cs where custid <= 3 and cs.custid=od.custid);
	
=> 고객번호가 3이하인 고객들의 총구매가격



5. 뷰의 장점과 단점을 설명하시오
장점 : 자주 사용하는 복잡한 sql을 대신하고, 보안유지상 접근제한이 가능하다
단점 : 가상의 테이블이다



6. 다음에 해당하는 뷰를 작성하시오.데이터는 마당서점 데이터베이스를 이용한다.
(1) 판매가격이 20,000원 이상인 도서의 도서번호,도서이름,고객이름,출판사,판매가격을 보여주는 highorders뷰를 생성하시오.
	create view highorders
	as
	select b.bookid,bookname,name,publisher,saleprice
	from book b,customer c,orders o
	where b.bookid=o.bookid and
	c.custid=o.custid and
	saleprice >= 20000;

(2) 생성한 뷰를 이용하여 판매된 도서의 이름과 고객의 이름을 출력하는 sql문을 작성하시오.
	select bookname,name from highorders;

(3) highorders뷰를 변경하고자 한다. 판매가격 속성을 삭제하는 명령을 수행하시오. 삭제 후 (2)번 sql문을 다시 수행하시오.
	


7.[사원 데이터베이스]3장의 연습문제 9번 데이터베이스를 이용하여 다음 질의에 해당되는 sql문을 작성하시오.
(1) 팀장(mgr)이 없는 직원의 이름을 보이시오.
	select ename from emp where mgr is null;

(2) 사원의 이름과 부서의 이름을 보이시오(조인/스칼라 부속질의 사용).
	*조인
	select ename,dname
	from emp e,dept d
	where e.dno=d.dno;
	
	*스칼라 부속질의(select절에 서브쿼리)
	select ename,(select dname from dept d where d.dno=e.dno) dname
	from emp e;

(3) '서교동'에 근무하는 사원의 이름을 보이시오(조인/인라인 뷰/중첩질의/EXISTS사용).
	*조인
	select ename
	from emp e,dept d
	where e.dno=d.dno and
	dloc = '서교동';
	
	*인라인 뷰
	select ename
	from (select dno from dept where dloc='서교동') d,emp e
	where d.dno=e.dno;
	
	*중첩질의
	select ename
	from emp
	where dno in (select dno from dept where dloc = '서교동');
	
	*EXISTS
	select ename
	from emp e
	where exists (select dno from dept d where d.dno=e.dno and dloc = '서교동');
	

(4) 평균보다 급여가 많은 직원의 이름을 보이시오.
	select ename
	from emp
	where salary > (select avg(salary) from emp);

(5) 자기 부서의 평균보다 급여가 많은 직원의 이름을 보이시오(상관 부속질의 사용).
	select ename
	from emp e1
	where e1.salary > (select avg(e2.salary) from emp e2 where e1.dno=e2.dno);
	
	
	
	
	
	


